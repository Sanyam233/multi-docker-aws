name: CI/CD Pipeline

on:
  push:
    branches:
      - "**"

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build a test client image
        run: docker build -t sanyamgupta23/multi-aws-containers-test -f ./client/Dockerfile.dev ./client

      - name: Run tests in Docker
        run: docker run -e CI=true sanyamgupta23/multi-aws-containers-test npm test

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build production images
        run: |
          docker build -t sanyamgupta23/multi-container-aws-client ./client
          docker build -t sanyamgupta23/multi-container-aws-nginx ./nginx
          docker build -t sanyamgupta23/multi-container-aws-worker ./worker
          docker build -t sanyamgupta23/multi-container-aws-server ./server

      - name: Push production images to Dockerhub
        run: |
          docker push sanyamgupta23/multi-container-aws-client
          docker push sanyamgupta23/multi-container-aws-nginx
          docker push sanyamgupta23/multi-container-aws-worker
          docker push sanyamgupta23/multi-container-aws-server

      - name: Build the deployment package with Dockerrun.aws.json
        run: zip -r deploy.zip Dockerrun.aws.json -x '*.git*'

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: docker-multi-containers
          environment_name: Docker-multi-containers-env
          version_label: ${{ github.sha }}
          existing_bucket_name: elasticbeanstalk-us-east-1-024848469382
          region: us-east-1
          deployment_package: deploy.zip

      - name: Deployed!
        run: echo App deployed to ELB
